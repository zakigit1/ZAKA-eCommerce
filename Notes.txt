Notes : 

about Image : 

    // Begin Saving PHOTO : 
    // if ($request->has('image')) {
    //     $imagePath = uploadImage($request->image,'profiles');

    //     $user->image =$imagePath;
    //     //'categories' : is the key of the folder we do it in config\filesystem
    // }
    // End Saving PHOTO : 

    ****************
    #### name the image : 
    // $imageName=rand().'_'.$request->image->getClientOriginalName();//15461149_564.jpg
    //Or : 
    //$image_ext=$request->image->getClientOriginalExtension();
    // $imageName='media_'.uniqid().'.'.$image_ext;
    
    #### to store image : 
    // $request->image->move(public_path('path'),$imageName);//store the image 
    //Or;
    // $imageStore =  $image->store('/Uploads/images/profiles');//image store in the storage folder
    // $imageStore =  $image->storeAs('/Uploads/images/','Admin1');//image store in the storage folder


    // $imageName = basename($imageStore);//this function give you just the name of photo without path



about relation : 
    $items = $data['product']->variants->pluck('items')->flatten(); //give you a collection


    $items = $data['product']->variants->pluck('items')->flatten()->toArray();//give you an array bc we convert the collection into Array

Explain : 
The flatten() method is used to flatten a multi-dimensional collection 
into a single-dimensional collection. It is commonly used when you have a 
collection of collections and you want to extract all 
the items from the nested collections into a single collection.

For example : 
$collection = collect([
    collect([1, 2, 3]),
    collect([4, 5, 6]),
    collect([7, 8, 9]),
]);

$flattenedCollection = $collection->flatten();

// Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]



//
if the value is null ,for save it : 
$oldBanner = $bannerOne['banner_image'] ?? null;




